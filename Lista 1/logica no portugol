algoritmo "Lista 1 - Ex1"

var
    turma, c : inteiro
    n1, n2, n3, n4, media, mediaGeral, maiorMedia, menorMedia: real
    mediaAcumulada: real

inicio
    c <- 0
    mediaGeral <- 0
    mediaAcumulada <- 0
    
    Repita
        Escreval ("Entre com o numero de alunos da turma: ")
        Leia (turma)
        Se (turma <= 0) ou (turma > 50) entao
            Escreval ("O numero de alunos na turma deve ser maior do que zero e menor ou igual a 50")
        FimSe
        Escreval (" ")
    Ate (turma > 0) e (turma <= 50)
    
    Enquanto (c < turma) faca
        c <- c + 1
        Escreval ("Notas aluno ", c, ": ")
        Leia (n1, n2, n3, n4)
        Escreval (" ")



        // Inicialmente, assumimos que todas as notas são iguais
        se (n1 = n2) e (n2 = n3) e (n3 = n4) entao
            media <- (n1 * 2.5 + n2 * 2.5 + n3 * 2.5 + n4 * 2.5) / 10  //TODAS IGUAIS

        senao
            // Identificar maior e menor nota
            se (n1 >= n2) e (n1 >= n3) e (n1 >= n4) entao
                // n1 é a maior
                se (n2 <= n3) e (n2 <= n4) entao
                    // n2 é a menor
                    media <- (n1 * 4 + n2 * 1 + n3 * 3 + n4 * 3) / 11

                senao
                    media <- (n1 * 4 + n2 * 2 + n3 * 2 + n4 * 2) / 10
                fimse


            senao
                // Se n2 é a maior
                se (n2 >= n1) e (n2 >= n3) e (n2 >= n4) entao
                    se (n1 <= n3) e (n1 <= n4) entao
                        media <- (n2 * 4 + n1 * 1 + n3 * 3 + n4 * 3) / 11

                    senao
                        media <- (n2 * 4 + n1 * 2 + n3 * 2 + n4 * 2) / 10
                    fimse

                senao
                    // Se n3 é a maior
                    se (n3 >= n1) e (n3 >= n2) e (n3 >= n4) entao
                        se (n1 <= n2) e (n1 <= n4) entao
                            media <- (n3 * 4 + n1 * 1 + n2 * 3 + n4 * 3) / 11
                        senao
                            media <- (n3 * 4 + n1 * 2 + n2 * 2 + n4 * 2) / 10
                        fimse

                    senao
                        // n4 é a maior
                        se (n1 <= n2) e (n1 <= n3) entao
                            media <- (n4 * 4 + n1 * 1 + n2 * 3 + n3 * 3) / 11
                        senao
                            media <- (n4 * 4 + n1 * 2 + n2 * 2 + n3 * 2) / 10
                        fimse
                    fimse
                fimse
            fimse
        fimse


        mediaAcumulada <- mediaAcumulada + media



        se (c = 1) entao
            maiorMedia <- media
            menorMedia <- media

        senao
            se (media > maiorMedia) entao
                maiorMedia <- media
            fimse

            se (media < menorMedia) entao
                menorMedia <- media
            fimse
        fimse

        Escreval ("Media final do aluno ", c, ": ", media)
        Escreval (" ")

    FimEnquanto





    mediaGeral <- mediaAcumulada / turma
    Escreval ("Media geral da turma: ", mediaGeral)
    Escreval (" ")
    Escreval ("Maior media da turma: ", maiorMedia, " (Alunos: ", , ")")
    Escreval (" ")
    Escreval ("Menor media da turma: ", menorMedia, " (Alunos: ", , ")")
    Escreval (" ")

fimalgoritmo
















algoritmo "CalculaMediaPonderada"

var
   turma, c : inteiro
   n1, n2, n3, n4, media, maiorMedia, menorMedia, mediaAcumulada: real

inicio
   c <- 0
   mediaAcumulada <- 0

   Repita
      Escreval ("Entre com o numero de alunos da turma: ")
      Leia (turma)
      Se (turma <= 0) ou (turma > 50) entao
         Escreval ("O numero de alunos na turma deve ser maior do que zero e menor ou igual a 50")
      FimSe
      Escreval (" ")
   Ate (turma > 0) e (turma <= 50)

   Enquanto (c < turma) faca
      c <- c + 1
      Escreval ("Notas aluno ", c, ": ")
      Leia (n1, n2, n3, n4)
      Escreval (" ")

      Se (n1 = n2) e (n2 = n3) e (n3 = n4) entao
         // Todas as notas são iguais
         media <- (n1 * 2.5 + n2 * 2.5 + n3 * 2.5 + n4 * 2.5) / 10
      Senao
         Se (n1 = n2) e (n2 = n3) entao
            // Três notas iguais e uma diferente
            Se (n1 > n4) entao
               media <- (n1 * 3 + n2 * 3 + n3 * 3 + n4 * 1) / 10 // n4 é menor
            Senao
               media <- (n1 * 2 + n2 * 2 + n3 * 2 + n4 * 4) / 10 // n4 é maior
            FimSe
         SenaoSe (n2 = n3) e (n3 = n4) entao
            Se (n2 > n1) entao
               media <- (n1 * 1 + n2 * 3 + n3 * 3 + n4 * 3) / 10 // n1 é menor
            Senao
               media <- (n1 * 4 + n2 * 2 + n3 * 2 + n4 * 2) / 10 // n1 é maior
            FimSe
         Senao
            // Todas as notas diferentes
            Se (n1 >= n2) e (n1 >= n3) e (n1 >= n4) entao
               Se (n2 >= n3) e (n2 >= n4) entao
                  Se (n3 >= n4) entao
                     media <- (n1 * 4 + n2 * 3 + n3 * 2 + n4 * 1) / 10
                  Senao
                     media <- (n1 * 4 + n2 * 3 + n3 * 1 + n4 * 2) / 10
                  FimSe
               SenaoSe (n3 >= n2) e (n3 >= n4) entao
                  Se (n2 >= n4) entao
                     media <- (n1 * 4 + n2 * 2 + n3 * 3 + n4 * 1) / 10
                  Senao
                     media <- (n1 * 4 + n2 * 1 + n3 * 3 + n4 * 2) / 10
                  FimSe
               Senao
                  Se (n2 >= n3) entao
                     media <- (n1 * 4 + n2 * 2 + n3 * 1 + n4 * 3) / 10
                  Senao
                     media <- (n1 * 4 + n2 * 1 + n3 * 2 + n4 * 3) / 10
                  FimSe
               FimSe
            Senao
               // Outras combinações de notas
               // Continue com as demais combinações para garantir que todas as possibilidades sejam cobertas
            FimSe
         FimSe
      FimSe

      // Atualiza a média acumulada
      mediaAcumulada <- mediaAcumulada + media

      // Atualiza maior e menor média
      Se (c = 1) entao
         maiorMedia <- media
         menorMedia <- media
      Senao
         Se (media > maiorMedia) entao
            maiorMedia <- media
         FimSe
         Se (media < menorMedia) entao
            menorMedia <- media
         FimSe
      FimSe

      Escreval ("Media final do aluno ", c, ": ", media)
      Escreval (" ")

   FimEnquanto

   Escreval ("Media geral da turma: ", mediaAcumulada / turma)
   Escreval ("Maior media da turma: ", maiorMedia)
   Escreval ("Menor media da turma: ", menorMedia)

fimalgoritmo

