#include <stdio.h>
#include <stdlib.h>

#define MAX_TIMES 100

typedef struct {
    int vitorias;
    int derrotas;
    int empates;
    int saldo_gols;
    int gols_marcados;
    int gols_sofridos;
} Time;

int main() {
    int n;
    
    // Solicita o número de times e verifica validade
    do {
        printf("Entre com o numero de times participantes: ", "\n");
        scanf("%d", &n);
        printf("\n");
        if (n < 2) {
            printf("Numero de times participantes deve ser maior ou igual a 2\n");
        }
    } while (n < 2);
    
    Time times[MAX_TIMES] = {0};  // Inicializa todos os times com zero
    
    int placar1, placar2, maior_diferenca = 0;
    int jogos[n][n][2];  // Matriz para armazenar os placares de cada jogo
    char jogos_maior_diferenca[MAX_TIMES * MAX_TIMES][50];
    int contador_maior_diferenca = 0;
    
    // Leitura dos placares dos jogos
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (i != j) {
                do {
                    printf("Placar time%d x time%d: ", i+1, j+1,"\n");
                    scanf("%d %d", &placar1, &placar2);
                    printf("\n");
                    if (placar1 < 0 || placar2 < 0) {
                        printf("Numero de gols de cada time no placar deve ser maior ou igual a zero\n");
                        printf("\n");
                    }
                } while (placar1 < 0 || placar2 < 0);
                
                jogos[i][j][0] = placar1;
                jogos[i][j][1] = placar2;

                // Atualiza as estatísticas dos times
                if (placar1 > placar2) {
                    times[i].vitorias++;
                    times[j].derrotas++;
                } else if (placar1 < placar2) {
                    times[i].derrotas++;
                    times[j].vitorias++;
                } else {
                    times[i].empates++;
                    times[j].empates++;
                }

                times[i].gols_marcados += placar1;
                times[i].gols_sofridos += placar2;
                times[j].gols_marcados += placar2;
                times[j].gols_sofridos += placar1;

                int diferenca_gols = abs(placar1 - placar2);
                if (diferenca_gols > maior_diferenca) {
                    maior_diferenca = diferenca_gols;
                    contador_maior_diferenca = 0;
                    sprintf(jogos_maior_diferenca[contador_maior_diferenca++], "time%d x time%d", i+1, j+1);
                } else if (diferenca_gols == maior_diferenca) {
                    sprintf(jogos_maior_diferenca[contador_maior_diferenca++], "time%d x time%d", i+1, j+1);
                }
            }
        }
    }

    // Identifica os times com mais vitórias, derrotas e empates
    int max_vitorias = 0, max_derrotas = 0, max_empates = 0;
    for (int i = 0; i < n; i++) {
        if (times[i].vitorias > max_vitorias) {
            max_vitorias = times[i].vitorias;
        }
        if (times[i].derrotas > max_derrotas) {
            max_derrotas = times[i].derrotas;
        }
        if (times[i].empates > max_empates) {
            max_empates = times[i].empates;
        }
    }

    printf("Time(s) com mais vitorias:");
    for (int i = 0; i < n; i++) {
        if (times[i].vitorias == max_vitorias) {
            printf(" %d", i + 1);
        }
    }
    printf(" com %d vitoria(s)\n", max_vitorias);

    printf("Time(s) com mais derrotas:");
    for (int i = 0; i < n; i++) {
        if (times[i].derrotas == max_derrotas) {
            printf(" %d",i+1);
        }
    }
    
    printf(" com %d derrota(s)\n", max_derrotas);

    if (max_empates == 0) {
        printf("\nTime(s) com mais empates: nao houve empates\n");
    } else {
        printf("Time(s) com mais empates:");
        for (int i = 0; i < n; i++) {
            if (times[i].empates == max_empates) {
                printf(" %d", i+1);
            }
        }
        printf(" com %d empate(s)\n", max_empates);
    }

    printf("Maior diferenca de gols foi de %d gol(s) no(s) jogo(s): ", maior_diferenca);
    for (int i = 0; i < contador_maior_diferenca; i++) {
        printf("%s; ", jogos_maior_diferenca[i]);
    }
    printf("\n");

    return 0;
}
